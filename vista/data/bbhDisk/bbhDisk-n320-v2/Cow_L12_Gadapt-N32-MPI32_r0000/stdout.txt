$ mkdir -p Cow_L12_Gadapt-N32-MPI32_r0000
$ cp bbhDisk_Cow_L12_Gadapt.par Cow_L12_Gadapt-N32-MPI32_r0000
$ mv stdout.txt Cow_L12_Gadapt-N32-MPI32_r0000
$ mv stderr.txt Cow_L12_Gadapt-N32-MPI32_r0000
$ cd Cow_L12_Gadapt-N32-MPI32_r0000
======================================================================
Launch MPI code...
----------------------------------------------------------------------
MPIRUN = ibrun /home1/08708/liwei/EinsteinToolkit/Cactus/exe/cactus_etk bbhDisk_Cow_L12_Gadapt.par

Job started on c613-031.vista.tacc.utexas.edu at Thu Dec 12 10:25:59 AM CST 2024
======================================================================
TACC:  Starting up job 70056 
TACC:  Setting up parallel environment for OpenMPI mpirun. 
TACC:  Starting parallel tasks... 
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.17.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.17.0
Compile date:      Dec 08 2024 (18:02:38)
Run date:          Dec 12 2024 (10:26:01-0600)
Run host:          c613-031.vista.tacc.utexas.edu (pid=2467197)
Working directory: /scratch/08708/liwei/bbhDisk/bbhDisk-n320-v2/Cow_L12/Cow_L12_Gadapt-N32-MPI32_r0000
Executable:        /home1/08708/liwei/EinsteinToolkit/Cactus/exe/cactus_etk
Parameter file:    bbhDisk_Cow_L12_Gadapt.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->ADMBaseX AsterX AsterSeeds BoxInBox CarpetX Cowling HydroBaseX ODESolvers TmunuBaseX<---
Thorn ADMBaseX requests automatic activation of Loop
Thorn AsterSeeds requests automatic activation of EOSX
Thorn AsterSeeds requests automatic activation of AsterUtils
Thorn AsterX requests automatic activation of Con2PrimFactory
Thorn AsterX requests automatic activation of ReconX
Thorn CarpetX requests automatic activation of AMReX
Thorn CarpetX requests automatic activation of IOUtil
Thorn CarpetX requests automatic activation of MPI
Thorn CarpetX requests automatic activation of yaml_cpp
Thorn CarpetX requests automatic activation of zlib
Thorn CarpetX requests automatic activation of Arith
Thorn CarpetX requests automatic activation of CarpetXRegrid
Thorn CarpetX requests automatic activation of ADIOS2
Thorn CarpetX requests automatic activation of openPMD
Thorn CarpetX requests automatic activation of Silo
Thorn Arith requests automatic activation of NSIMD
Thorn Con2PrimFactory requests automatic activation of Algo
Thorn MPI requests automatic activation of hwloc
Thorn openPMD requests automatic activation of HDF5
Thorn Algo requests automatic activation of Boost
Activating thorn ADIOS2...Success -> active implementation ADIOS2
Activating thorn ADMBaseX...Success -> active implementation ADMBaseX
Activating thorn Algo...Success -> active implementation Algo
Activating thorn AMReX...Success -> active implementation AMReX
Activating thorn Arith...Success -> active implementation Arith
Activating thorn AsterSeeds...Success -> active implementation AsterSeeds
Activating thorn AsterUtils...Success -> active implementation AsterUtils
Activating thorn AsterX...Success -> active implementation AsterX
Activating thorn Boost...Success -> active implementation Boost
Activating thorn BoxInBox...Success -> active implementation BoxInBox
Activating thorn CarpetX...Success -> active implementation Driver
Activating thorn CarpetXRegrid...Success -> active implementation CarpetXRegrid
Activating thorn Con2PrimFactory...Success -> active implementation Con2PrimFactory
Activating thorn Cowling...Success -> active implementation Cowling
Activating thorn EOSX...Success -> active implementation EOSX
Activating thorn HDF5...Success -> active implementation HDF5
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn HydroBaseX...Success -> active implementation HydroBaseX
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn Loop...Success -> active implementation Loop
Activating thorn MPI...Success -> active implementation MPI
Activating thorn NSIMD...Success -> active implementation NSIMD
Activating thorn ODESolvers...Success -> active implementation ODESolvers
Activating thorn openPMD...Success -> active implementation openPMD
Activating thorn ReconX...Success -> active implementation ReconX
Activating thorn Silo...Success -> active implementation Silo
Activating thorn TmunuBaseX...Success -> active implementation TmunuBaseX
Activating thorn yaml_cpp...Success -> active implementation yaml_cpp
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CarpetX::Driver_Startup: Start up the driver
      IOUtil::IOUtil_Startup: Startup routine
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      Algo::Test_roots: [meta] Test root-finding algorithms
      Arith::Test_smallvector: [meta] Test small vectors
      Arith::Test_spvect: [meta] Test sparse vectors
  Parameter checking routines
    [CCTK_PARAMCHECK]

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
      [CCTK_BASEGRID]
        CarpetXRegrid::CarpetXRegrid_InitError: Initialize regridding error to zero
        GROUP ODESolvers_BaseGrid: Set up constants (e.g. coordinates) everywhere on the grid
      [CCTK_INITIAL]
        BoxInBox::BoxInBox_Init: [global] Initialize
        GROUP ODESolvers_Initial: Set up initial conditions on interior of state vector
          GROUP ADMBaseX_InitialData: Schedule group for calculating ADM initial data
            ADMBaseX::ADMBaseX_initial_data: Set up Cartesian Minkowski initial data
          GROUP ADMBaseX_InitialGauge: Schedule group for the ADM initial gauge condition
            ADMBaseX::ADMBaseX_initial_lapse: Set lapse to one
            ADMBaseX::ADMBaseX_initial_shift: Set shift to zero
          GROUP ADMBaseX_PostInitial: Schedule group for modifying the ADM initial data, such as e.g. adding noise
          GROUP HydroBaseX_InitialData: Schedule group for calculating hydro initial data
            HydroBaseX::HydroBaseX_initial_data: Set up vacuum initial data
            AsterSeeds::BBHCloud_Initialize: Set up initial conditions for atmosphere
          GROUP HydroBaseX_PostInitial: Schedule group for modifying the hydro initial data, such as e.g. adding noise
            AsterSeeds::SetEntropy: Set initial entropy
          GROUP AsterX_InitialGroup: Initialize conservative variables
            AsterX::AsterX_ComputedBstagFromA: Calculate dBstag from curl of A
            AsterX::AsterX_ComputedBFromdBstag: Calculate centered dB from dBstag
            AsterX::AsterX_ComputeBFromdB: Calculate centered B from densitized B
            AsterX::AsterX_Prim2Con_Initial: Compute conserved variables from primitive variables at initial
        GROUP TmunuBaseX_SetTmunuVars: Schedule group for setting T_munu
          TmunuBaseX::TmunuBaseX_ZeroTmunu: Set T_munu to zero
          GROUP TmunuBaseX_AddToTmunu: Add to T_munu here
      [CCTK_POSTINITIAL]
        BoxInBox::EstimateError: Estimate error
        GROUP ODESolvers_PostStep: Apply boundary conditions to state vector, and project if necessary
          GROUP ADMBaseX_SetADMVars: Set ADM variables in this group
            GROUP ADMBaseX_InitialData: Schedule group for calculating ADM initial data
              ADMBaseX::ADMBaseX_initial_data: Set up Cartesian Minkowski initial data
            GROUP ADMBaseX_InitialGauge: Schedule group for the ADM initial gauge condition
              ADMBaseX::ADMBaseX_initial_lapse: Set lapse to one
              ADMBaseX::ADMBaseX_initial_shift: Set shift to zero
            GROUP ADMBaseX_PostInitial: Schedule group for modifying the ADM initial data, such as e.g. adding noise
          GROUP ADMBaseX_SetADMRHS: Set ADM RHS variables in this group
          AsterX::AsterX_Sync: [global] Synchronize
          GROUP AsterX_Con2PrimGroup: Compute primitive variables
            AsterX::AsterX_ComputedBstagFromA: Calculate dBstag from curl of A
            AsterX::AsterX_ComputedBFromdBstag: Calculate centered dB from dBstag
            AsterX::AsterX_Con2Prim: Calculate primitive variables from conservative variables
          GROUP HydroBaseX_SetHydroVars: Set hydro variables in this group, or before this group
          GROUP TmunuBaseX_SetTmunuVars: Schedule group for setting T_munu
            TmunuBaseX::TmunuBaseX_ZeroTmunu: Set T_munu to zero
            GROUP TmunuBaseX_AddToTmunu: Add to T_munu here
        GROUP ODESolvers_EstimateError: Estimate discretization error (for regridding)
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
        BoxInBox::EstimateError: Estimate error
        GROUP ODESolvers_EstimateError: Estimate discretization error (for regridding)
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CarpetXRegrid::CarpetXRegrid_InitError: Initialize regridding error to zero
        GROUP ODESolvers_BaseGrid: Set up constants (e.g. coordinates) everywhere on the grid
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
        GROUP ODESolvers_PostStep: Apply boundary conditions to state vector, and project if necessary
          GROUP ADMBaseX_SetADMVars: Set ADM variables in this group
            GROUP ADMBaseX_InitialData: Schedule group for calculating ADM initial data
              ADMBaseX::ADMBaseX_initial_data: Set up Cartesian Minkowski initial data
            GROUP ADMBaseX_InitialGauge: Schedule group for the ADM initial gauge condition
              ADMBaseX::ADMBaseX_initial_lapse: Set lapse to one
              ADMBaseX::ADMBaseX_initial_shift: Set shift to zero
            GROUP ADMBaseX_PostInitial: Schedule group for modifying the ADM initial data, such as e.g. adding noise
          GROUP ADMBaseX_SetADMRHS: Set ADM RHS variables in this group
          AsterX::AsterX_Sync: [global] Synchronize
          GROUP AsterX_Con2PrimGroup: Compute primitive variables
            AsterX::AsterX_ComputedBstagFromA: Calculate dBstag from curl of A
            AsterX::AsterX_ComputedBFromdBstag: Calculate centered dB from dBstag
            AsterX::AsterX_Con2Prim: Calculate primitive variables from conservative variables
          GROUP HydroBaseX_SetHydroVars: Set hydro variables in this group, or before this group
          GROUP TmunuBaseX_SetTmunuVars: Schedule group for setting T_munu
            TmunuBaseX::TmunuBaseX_ZeroTmunu: Set T_munu to zero
            GROUP TmunuBaseX_AddToTmunu: Add to T_munu here
        GROUP ODESolvers_EstimateError: Estimate discretization error (for regridding)
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
        CarpetX::CarpetX_CheckpointInitial: [meta] Checkpoint initial conditions
    endif
    if (analysis)
      [CCTK_ANALYSIS]
        GROUP ODESolvers_Analysis: Calculate analysis quantities everywhere
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      AsterX::AsterX_Sync: [global] Synchronize
      GROUP ODESolvers_PostStep: Apply boundary conditions to state vector, and project if necessary
        GROUP ADMBaseX_SetADMVars: Set ADM variables in this group
          GROUP ADMBaseX_InitialData: Schedule group for calculating ADM initial data
            ADMBaseX::ADMBaseX_initial_data: Set up Cartesian Minkowski initial data
          GROUP ADMBaseX_InitialGauge: Schedule group for the ADM initial gauge condition
            ADMBaseX::ADMBaseX_initial_lapse: Set lapse to one
            ADMBaseX::ADMBaseX_initial_shift: Set shift to zero
          GROUP ADMBaseX_PostInitial: Schedule group for modifying the ADM initial data, such as e.g. adding noise
        GROUP ADMBaseX_SetADMRHS: Set ADM RHS variables in this group
        AsterX::AsterX_Sync: [global] Synchronize
        GROUP AsterX_Con2PrimGroup: Compute primitive variables
          AsterX::AsterX_ComputedBstagFromA: Calculate dBstag from curl of A
          AsterX::AsterX_ComputedBFromdBstag: Calculate centered dB from dBstag
          AsterX::AsterX_Con2Prim: Calculate primitive variables from conservative variables
        GROUP HydroBaseX_SetHydroVars: Set hydro variables in this group, or before this group
        GROUP TmunuBaseX_SetTmunuVars: Schedule group for setting T_munu
          TmunuBaseX::TmunuBaseX_ZeroTmunu: Set T_munu to zero
          GROUP TmunuBaseX_AddToTmunu: Add to T_munu here
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
      ODESolvers::ODESolvers_Solve: [level] Solve ODEs
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
      GROUP ODESolvers_PostStep: Apply boundary conditions to state vector, and project if necessary
        GROUP ADMBaseX_SetADMVars: Set ADM variables in this group
          GROUP ADMBaseX_InitialData: Schedule group for calculating ADM initial data
            ADMBaseX::ADMBaseX_initial_data: Set up Cartesian Minkowski initial data
          GROUP ADMBaseX_InitialGauge: Schedule group for the ADM initial gauge condition
            ADMBaseX::ADMBaseX_initial_lapse: Set lapse to one
            ADMBaseX::ADMBaseX_initial_shift: Set shift to zero
          GROUP ADMBaseX_PostInitial: Schedule group for modifying the ADM initial data, such as e.g. adding noise
        GROUP ADMBaseX_SetADMRHS: Set ADM RHS variables in this group
        AsterX::AsterX_Sync: [global] Synchronize
        GROUP AsterX_Con2PrimGroup: Compute primitive variables
          AsterX::AsterX_ComputedBstagFromA: Calculate dBstag from curl of A
          AsterX::AsterX_ComputedBFromdBstag: Calculate centered dB from dBstag
          AsterX::AsterX_Con2Prim: Calculate primitive variables from conservative variables
        GROUP HydroBaseX_SetHydroVars: Set hydro variables in this group, or before this group
        GROUP TmunuBaseX_SetTmunuVars: Schedule group for setting T_munu
          TmunuBaseX::TmunuBaseX_ZeroTmunu: Set T_munu to zero
          GROUP TmunuBaseX_AddToTmunu: Add to T_munu here
    [CCTK_POSTSTEP]
      BoxInBox::EstimateError: Estimate error
      GROUP ODESolvers_EstimateError: Estimate discretization error (for regridding)
    if (checkpoint)
      [CCTK_CHECKPOINT]
      CarpetX::CarpetX_Checkpoint: [meta] Checkpoint
    endif
    if (analysis)
      [CCTK_ANALYSIS]
      GROUP ODESolvers_Analysis: Calculate analysis quantities everywhere
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      CarpetX::CarpetX_CheckpointTerminate: [meta] Checkpoint before terminating

  Shutdown routines
    [CCTK_SHUTDOWN]
      CarpetX::Driver_Shutdown: [meta] Shut down the driver

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      AsterX::AsterX_Sync: [global] Synchronize
      GROUP ODESolvers_PostStep: Apply boundary conditions to state vector, and project if necessary
        GROUP ADMBaseX_SetADMVars: Set ADM variables in this group
          GROUP ADMBaseX_InitialData: Schedule group for calculating ADM initial data
            ADMBaseX::ADMBaseX_initial_data: Set up Cartesian Minkowski initial data
          GROUP ADMBaseX_InitialGauge: Schedule group for the ADM initial gauge condition
            ADMBaseX::ADMBaseX_initial_lapse: Set lapse to one
            ADMBaseX::ADMBaseX_initial_shift: Set shift to zero
          GROUP ADMBaseX_PostInitial: Schedule group for modifying the ADM initial data, such as e.g. adding noise
        GROUP ADMBaseX_SetADMRHS: Set ADM RHS variables in this group
        AsterX::AsterX_Sync: [global] Synchronize
        GROUP AsterX_Con2PrimGroup: Compute primitive variables
          AsterX::AsterX_ComputedBstagFromA: Calculate dBstag from curl of A
          AsterX::AsterX_ComputedBFromdBstag: Calculate centered dB from dBstag
          AsterX::AsterX_Con2Prim: Calculate primitive variables from conservative variables
        GROUP HydroBaseX_SetHydroVars: Set hydro variables in this group, or before this group
        GROUP TmunuBaseX_SetTmunuVars: Schedule group for setting T_munu
          TmunuBaseX::TmunuBaseX_ZeroTmunu: Set T_munu to zero
          GROUP TmunuBaseX_AddToTmunu: Add to T_munu here
--------------------------------------------------------------------------------
INFO (hwloc): library version 2.7.1, API version 0x20500
--------------------------------------------------------------------------------

  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [39m  
  [34m──██──[34m──██──[34m──██──[34m──██──[34m──██──[34m──██──[34m──██──[34m──██──[34m──██──[39m  
  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [39m  
  [34m  ▕▏  [32m██████[34m  ▕▏  [34m  ▕▏  [32m██████[34m  ▕▏  [34m  ▕▏  [32m██████[34m  ▕▏  [39m  
  [34m──██──[32m██████[34m──██──[34m──██──[32m██████[34m──██──[34m──██──[32m██████[34m──██──[39m  
  [34m  ▕▏  [32m██████[34m  ▕▏  [34m  ▕▏  [32m██████[34m  ▕▏  [34m  ▕▏  [32m██████[34m  ▕▏  [39m  
  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [39m  
  [34m──██──[34m──██──[34m──██──[34m──██──[34m──██──[34m──██──[34m──██──[34m──██──[34m──██──[39m  
  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [39m  
  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [31m██████[31m██████[31m██████[34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [39m  
  [34m──██──[34m──██──[34m──██──[31m██████[31m██████[31m██████[34m──██──[34m──██──[34m──██──[39m  
  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [31m██████[31m██████[31m██████[34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [39m  
  [34m  ▕▏  [32m██████[34m  ▕▏  [31m██████[31m██████[31m██████[34m  ▕▏  [32m██████[34m  ▕▏  [39m  
  [34m──██──[32m██████[34m──██──[31m██████[31m██████[31m██████[34m──██──[32m██████[34m──██──[39m  
  [34m  ▕▏  [32m██████[34m  ▕▏  [31m██████[31m██████[31m██████[34m  ▕▏  [32m██████[34m  ▕▏  [39m  
  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [31m██████[31m██████[31m██████[34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [39m  
  [34m──██──[34m──██──[34m──██──[31m██████[31m██████[31m██████[34m──██──[34m──██──[34m──██──[39m  
  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [31m██████[31m██████[31m██████[34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [39m  
  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [39m  
  [34m──██──[34m──██──[34m──██──[34m──██──[34m──██──[34m──██──[34m──██──[34m──██──[34m──██──[39m  
  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [39m  
  [34m  ▕▏  [32m██████[34m  ▕▏  [34m  ▕▏  [32m██████[34m  ▕▏  [34m  ▕▏  [32m██████[34m  ▕▏  [39m  
  [34m──██──[32m██████[34m──██──[34m──██──[32m██████[34m──██──[34m──██──[32m██████[34m──██──[39m  
  [34m  ▕▏  [32m██████[34m  ▕▏  [34m  ▕▏  [32m██████[34m  ▕▏  [34m  ▕▏  [32m██████[34m  ▕▏  [39m  
  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [39m  
  [34m──██──[34m──██──[34m──██──[34m──██──[34m──██──[34m──██──[34m──██──[34m──██──[34m──██──[39m  
  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [34m  ▕▏  [39m  

AMR driver provided by CarpetX,
using AMReX 24.12-4-g81cc845dc1ad (MPI, no OpenMP, accelerators, optimized)
--------------------------------------------------------------------------------

Initializing AMReX (24.12-4-g81cc845dc1ad)...
MPI initialized with 32 MPI processes
MPI initialized with thread support level 2
Initializing CUDA...
CUDA initialized with 32 devices.
AMReX (24.12-4-g81cc845dc1ad) initialized
INFO (CarpetX): 
Symmetries:
  lower x: none
  lower y: none
  lower z: none
  upper x: none
  upper y: none
  upper z: none
Default boundaries:
  lower x: neumann
  lower y: neumann
  lower z: neumann
  upper x: neumann
  upper y: neumann
  upper z: neumann
INFO (Algo): Test_bisect succeeded in 51 iterations
INFO (Algo): Test_bracket_and_solve_root succeeded in 11 iterations
INFO (Algo): Test_newton_raphson succeeded in 5 iterations
INFO (Algo): Test_halley succeeded in 4 iterations
INFO (Algo): Test_schroder succeeded in 4 iterations
INFO (Algo): Test_brent succeeded in 8 iterations
INFO (Algo): Test_newton_raphson_nd succeeded in 67 iterations
INFO (Arith): Test_smallvector
INFO (Arith): Test_spvect
INFO (CarpetX): Setting initial values for max_grid_size values for all levels
INFO (CarpetX): Setting up initial conditions...
INFO (CarpetX): Iteration: 0   time: 0   delta_time: 32
INFO (CarpetX): Patch 0:
INFO (CarpetX):   Grid extent:
INFO (CarpetX):     gsh=[327,327,327]
INFO (CarpetX):     blocking_factor=[8,8,8]
INFO (CarpetX):     max_grid_size=[112,112,112]
INFO (CarpetX):     max_tile_size=[1024000,1024000,1024000]
INFO (CarpetX):   Domain extent:
INFO (CarpetX):     xmin=[-10240,-10240,-10240]
INFO (CarpetX):     xmax=[10240,10240,10240]
INFO (CarpetX):     base dx=[64,64,64]
INFO (CarpetX): Initializing level 0...
INFO (CarpetX): Regridding...
INFO (CarpetX):   level 0: 54 boxes, 32768000 cells (100%)
INFO (CarpetX):   level 1: 54 boxes, 32768000 cells (12.5%, 12%)
INFO (CarpetX): Iteration: 0   time: 0   delta_time: 16
INFO (CarpetX): Initializing level 1...
INFO (CarpetX): Regridding...
INFO (CarpetX):   level 0: 54 boxes, 32768000 cells (100%)
INFO (CarpetX):   level 1: 54 boxes, 32768000 cells (12.5%, 12%)
INFO (CarpetX):   level 2: 54 boxes, 32768000 cells (1.562%, 12%)
INFO (CarpetX): Iteration: 0   time: 0   delta_time: 8
INFO (CarpetX): Initializing level 2...
INFO (CarpetX): Regridding...
INFO (CarpetX):   level 0: 54 boxes, 32768000 cells (100%)
INFO (CarpetX):   level 1: 54 boxes, 32768000 cells (12.5%, 12%)
INFO (CarpetX):   level 2: 54 boxes, 32768000 cells (1.562%, 12%)
INFO (CarpetX):   level 3: 54 boxes, 32768000 cells (0.1953%, 12%)
INFO (CarpetX): Iteration: 0   time: 0   delta_time: 4
INFO (CarpetX): Initializing level 3...
INFO (CarpetX): Regridding...
INFO (CarpetX):   level 0: 54 boxes, 32768000 cells (100%)
INFO (CarpetX):   level 1: 54 boxes, 32768000 cells (12.5%, 12%)
INFO (CarpetX):   level 2: 54 boxes, 32768000 cells (1.562%, 12%)
INFO (CarpetX):   level 3: 54 boxes, 32768000 cells (0.1953%, 12%)
INFO (CarpetX):   level 4: 54 boxes, 32768000 cells (0.02441%, 12%)
INFO (CarpetX): Iteration: 0   time: 0   delta_time: 2
INFO (CarpetX): Initializing level 4...
INFO (CarpetX): Regridding...
INFO (CarpetX):   level 0: 54 boxes, 32768000 cells (100%)
INFO (CarpetX):   level 1: 54 boxes, 32768000 cells (12.5%, 12%)
INFO (CarpetX):   level 2: 54 boxes, 32768000 cells (1.562%, 12%)
INFO (CarpetX):   level 3: 54 boxes, 32768000 cells (0.1953%, 12%)
INFO (CarpetX):   level 4: 54 boxes, 32768000 cells (0.02441%, 12%)
INFO (CarpetX):   level 5: 54 boxes, 32768000 cells (0.003052%, 12%)
INFO (CarpetX): Iteration: 0   time: 0   delta_time: 1
INFO (CarpetX): Initializing level 5...
INFO (CarpetX): Regridding...
INFO (CarpetX):   level 0: 54 boxes, 32768000 cells (100%)
INFO (CarpetX):   level 1: 54 boxes, 32768000 cells (12.5%, 12%)
INFO (CarpetX):   level 2: 54 boxes, 32768000 cells (1.562%, 12%)
INFO (CarpetX):   level 3: 54 boxes, 32768000 cells (0.1953%, 12%)
INFO (CarpetX):   level 4: 54 boxes, 32768000 cells (0.02441%, 12%)
INFO (CarpetX):   level 5: 54 boxes, 32768000 cells (0.003052%, 12%)
INFO (CarpetX):   level 6: 54 boxes, 32768000 cells (0.0003815%, 12%)
INFO (CarpetX): Iteration: 0   time: 0   delta_time: 0.5
INFO (CarpetX): Initializing level 6...
INFO (CarpetX): Regridding...
INFO (CarpetX):   level 0: 54 boxes, 32768000 cells (100%)
INFO (CarpetX):   level 1: 54 boxes, 32768000 cells (12.5%, 12%)
INFO (CarpetX):   level 2: 54 boxes, 32768000 cells (1.562%, 12%)
INFO (CarpetX):   level 3: 54 boxes, 32768000 cells (0.1953%, 12%)
INFO (CarpetX):   level 4: 54 boxes, 32768000 cells (0.02441%, 12%)
INFO (CarpetX):   level 5: 54 boxes, 32768000 cells (0.003052%, 12%)
INFO (CarpetX):   level 6: 54 boxes, 32768000 cells (0.0003815%, 12%)
INFO (CarpetX):   level 7: 54 boxes, 32768000 cells (4.768e-05%, 12%)
INFO (CarpetX): Iteration: 0   time: 0   delta_time: 0.25
INFO (CarpetX): Initializing level 7...
INFO (CarpetX): Regridding...
INFO (CarpetX):   level 0: 54 boxes, 32768000 cells (100%)
INFO (CarpetX):   level 1: 54 boxes, 32768000 cells (12.5%, 12%)
INFO (CarpetX):   level 2: 54 boxes, 32768000 cells (1.562%, 12%)
INFO (CarpetX):   level 3: 54 boxes, 32768000 cells (0.1953%, 12%)
INFO (CarpetX):   level 4: 54 boxes, 32768000 cells (0.02441%, 12%)
INFO (CarpetX):   level 5: 54 boxes, 32768000 cells (0.003052%, 12%)
INFO (CarpetX):   level 6: 54 boxes, 32768000 cells (0.0003815%, 12%)
INFO (CarpetX):   level 7: 54 boxes, 32768000 cells (4.768e-05%, 12%)
INFO (CarpetX):   level 8: 54 boxes, 32768000 cells (5.96e-06%, 12%)
INFO (CarpetX): Iteration: 0   time: 0   delta_time: 0.125
INFO (CarpetX): Initializing level 8...
INFO (CarpetX): Regridding...
INFO (CarpetX):   level 0: 54 boxes, 32768000 cells (100%)
INFO (CarpetX):   level 1: 54 boxes, 32768000 cells (12.5%, 12%)
INFO (CarpetX):   level 2: 54 boxes, 32768000 cells (1.562%, 12%)
INFO (CarpetX):   level 3: 54 boxes, 32768000 cells (0.1953%, 12%)
INFO (CarpetX):   level 4: 54 boxes, 32768000 cells (0.02441%, 12%)
INFO (CarpetX):   level 5: 54 boxes, 32768000 cells (0.003052%, 12%)
INFO (CarpetX):   level 6: 54 boxes, 32768000 cells (0.0003815%, 12%)
INFO (CarpetX):   level 7: 54 boxes, 32768000 cells (4.768e-05%, 12%)
INFO (CarpetX):   level 8: 54 boxes, 32768000 cells (5.96e-06%, 12%)
INFO (CarpetX):   level 9: 54 boxes, 32768000 cells (7.451e-07%, 12%)
INFO (CarpetX): Iteration: 0   time: 0   delta_time: 0.0625
INFO (CarpetX): Initializing level 9...
INFO (CarpetX): Regridding...
INFO (CarpetX):   level 0: 54 boxes, 32768000 cells (100%)
INFO (CarpetX):   level 1: 54 boxes, 32768000 cells (12.5%, 12%)
INFO (CarpetX):   level 2: 54 boxes, 32768000 cells (1.562%, 12%)
INFO (CarpetX):   level 3: 54 boxes, 32768000 cells (0.1953%, 12%)
INFO (CarpetX):   level 4: 54 boxes, 32768000 cells (0.02441%, 12%)
INFO (CarpetX):   level 5: 54 boxes, 32768000 cells (0.003052%, 12%)
INFO (CarpetX):   level 6: 54 boxes, 32768000 cells (0.0003815%, 12%)
INFO (CarpetX):   level 7: 54 boxes, 32768000 cells (4.768e-05%, 12%)
INFO (CarpetX):   level 8: 54 boxes, 32768000 cells (5.96e-06%, 12%)
INFO (CarpetX):   level 9: 54 boxes, 32768000 cells (7.451e-07%, 12%)
INFO (CarpetX):   level 10: 60 boxes, 34406400 cells (9.779e-08%, 13%)
INFO (CarpetX): Iteration: 0   time: 0   delta_time: 0.03125
INFO (CarpetX): Initializing level 10...
INFO (CarpetX): Regridding...
INFO (CarpetX):   level 0: 54 boxes, 32768000 cells (100%)
INFO (CarpetX):   level 1: 54 boxes, 32768000 cells (12.5%, 12%)
INFO (CarpetX):   level 2: 54 boxes, 32768000 cells (1.562%, 12%)
INFO (CarpetX):   level 3: 54 boxes, 32768000 cells (0.1953%, 12%)
INFO (CarpetX):   level 4: 54 boxes, 32768000 cells (0.02441%, 12%)
INFO (CarpetX):   level 5: 54 boxes, 32768000 cells (0.003052%, 12%)
INFO (CarpetX):   level 6: 54 boxes, 32768000 cells (0.0003815%, 12%)
INFO (CarpetX):   level 7: 54 boxes, 32768000 cells (4.768e-05%, 12%)
INFO (CarpetX):   level 8: 54 boxes, 32768000 cells (5.96e-06%, 12%)
INFO (CarpetX):   level 9: 54 boxes, 32768000 cells (7.451e-07%, 12%)
INFO (CarpetX):   level 10: 60 boxes, 34406400 cells (9.779e-08%, 13%)
INFO (CarpetX):   level 11: 54 boxes, 34603008 cells (1.229e-08%, 13%)
INFO (CarpetX): Iteration: 0   time: 0   delta_time: 0.015625
INFO (CarpetX): Initializing level 11...
INFO (CarpetX): Regridding...
INFO (CarpetX):   level 0: 54 boxes, 32768000 cells (100%)
INFO (CarpetX):   level 1: 54 boxes, 32768000 cells (12.5%, 12%)
INFO (CarpetX):   level 2: 54 boxes, 32768000 cells (1.562%, 12%)
INFO (CarpetX):   level 3: 54 boxes, 32768000 cells (0.1953%, 12%)
INFO (CarpetX):   level 4: 54 boxes, 32768000 cells (0.02441%, 12%)
INFO (CarpetX):   level 5: 54 boxes, 32768000 cells (0.003052%, 12%)
INFO (CarpetX):   level 6: 54 boxes, 32768000 cells (0.0003815%, 12%)
INFO (CarpetX):   level 7: 54 boxes, 32768000 cells (4.768e-05%, 12%)
INFO (CarpetX):   level 8: 54 boxes, 32768000 cells (5.96e-06%, 12%)
INFO (CarpetX):   level 9: 54 boxes, 32768000 cells (7.451e-07%, 12%)
INFO (CarpetX):   level 10: 60 boxes, 34406400 cells (9.779e-08%, 13%)
INFO (CarpetX):   level 11: 54 boxes, 34603008 cells (1.229e-08%, 13%)
INFO (CarpetX): Initialized 12 levels
INFO (CarpetX): OutputGH: iteration 0, time 0.000000, run time 15 s
INFO (CarpetX): OutputGH done.
INFO (CarpetX): Starting evolution...
INFO (CarpetX): Regridding...
INFO (CarpetX): Setting max_grid_size values for all levels before regridding
INFO (CarpetX):   old levels 12, new levels 12
INFO (CarpetX):   level 0: 54 boxes, 32768000 cells (100%)
INFO (CarpetX):   level 1: 54 boxes, 32768000 cells (12.5%, 12%)
INFO (CarpetX):   level 2: 54 boxes, 32768000 cells (1.562%, 12%)
INFO (CarpetX):   level 3: 54 boxes, 32768000 cells (0.1953%, 12%)
INFO (CarpetX):   level 4: 54 boxes, 32768000 cells (0.02441%, 12%)
INFO (CarpetX):   level 5: 54 boxes, 32768000 cells (0.003052%, 12%)
INFO (CarpetX):   level 6: 54 boxes, 32768000 cells (0.0003815%, 12%)
INFO (CarpetX):   level 7: 54 boxes, 32768000 cells (4.768e-05%, 12%)
INFO (CarpetX):   level 8: 54 boxes, 32768000 cells (5.96e-06%, 12%)
INFO (CarpetX):   level 9: 54 boxes, 32768000 cells (7.451e-07%, 12%)
INFO (CarpetX):   level 10: 60 boxes, 34406400 cells (9.779e-08%, 13%)
INFO (CarpetX):   level 11: 54 boxes, 34603008 cells (1.229e-08%, 13%)
INFO (ODESolvers): Integrator is RK4
INFO (CarpetX): OutputGH: iteration 1, time 0.015625, run time 19 s
INFO (CarpetX): OutputGH done.
INFO (CarpetX): Simulation time: 0.015625   Iterations per second: 0.220773   Simulation time per second: 0.00344957
INFO (CarpetX): Grid cells: 3.96689e+08   Grid cell updates per second: 8.75782e+07
INFO (CarpetX): Performance:
INFO (CarpetX):   total evolution time:            4.52954 sec
INFO (CarpetX):   total evolution compute time:    4.52952 sec
INFO (CarpetX):   total evolution output time:     2.19345e-05 sec
INFO (CarpetX):   total iterations:                1
INFO (CarpetX):   total cells updated:             3.96689e+08
INFO (CarpetX):   average iterations per second: 0.220773
INFO (CarpetX):   average cell updates per second: 8.75782e+07
INFO (CarpetX): OutputGH: iteration 2, time 0.031250, run time 29 s
INFO (CarpetX): OutputGH done.
INFO (CarpetX): Simulation time: 0.03125   Iterations per second: 0.101586   Simulation time per second: 0.00158729
INFO (CarpetX): Grid cells: 3.96689e+08   Grid cell updates per second: 4.02982e+07
INFO (CarpetX): Performance:
INFO (CarpetX):   total evolution time:            14.3734 sec
INFO (CarpetX):   total evolution compute time:    14.3733 sec
INFO (CarpetX):   total evolution output time:     4.41074e-05 sec
INFO (CarpetX):   total iterations:                2
INFO (CarpetX):   total cells updated:             7.93379e+08
INFO (CarpetX):   average iterations per second: 0.139146
INFO (CarpetX):   average cell updates per second: 5.51977e+07
INFO (CarpetX): OutputGH: iteration 3, time 0.046875, run time 38 s
INFO (CarpetX): OutputGH done.
INFO (CarpetX): Simulation time: 0.046875   Iterations per second: 0.121229   Simulation time per second: 0.00189421
INFO (CarpetX): Grid cells: 3.96689e+08   Grid cell updates per second: 4.80904e+07
INFO (CarpetX): Performance:
INFO (CarpetX):   total evolution time:            22.6222 sec
INFO (CarpetX):   total evolution compute time:    22.6222 sec
INFO (CarpetX):   total evolution output time:     6.29425e-05 sec
INFO (CarpetX):   total iterations:                3
INFO (CarpetX):   total cells updated:             1.19007e+09
INFO (CarpetX):   average iterations per second: 0.132613
INFO (CarpetX):   average cell updates per second: 5.26062e+07
INFO (CarpetX): OutputGH: iteration 4, time 0.062500, run time 43 s
INFO (CarpetX): OutputGH done.
INFO (CarpetX): Simulation time: 0.0625   Iterations per second: 0.18263   Simulation time per second: 0.00285359
INFO (CarpetX): Grid cells: 3.96689e+08   Grid cell updates per second: 7.24472e+07
INFO (CarpetX): Performance:
INFO (CarpetX):   total evolution time:            28.0978 sec
INFO (CarpetX):   total evolution compute time:    28.0977 sec
INFO (CarpetX):   total evolution output time:     8.10623e-05 sec
INFO (CarpetX):   total iterations:                4
INFO (CarpetX):   total cells updated:             1.58676e+09
INFO (CarpetX):   average iterations per second: 0.14236
INFO (CarpetX):   average cell updates per second: 5.64727e+07
INFO (CarpetX): OutputGH: iteration 5, time 0.078125, run time 48 s
INFO (CarpetX): OutputGH done.
INFO (CarpetX): Simulation time: 0.078125   Iterations per second: 0.197837   Simulation time per second: 0.00309121
INFO (CarpetX): Grid cells: 3.96689e+08   Grid cell updates per second: 7.848e+07
INFO (CarpetX): Performance:
INFO (CarpetX):   total evolution time:            33.1524 sec
INFO (CarpetX):   total evolution compute time:    33.1523 sec
INFO (CarpetX):   total evolution output time:     9.70364e-05 sec
INFO (CarpetX):   total iterations:                5
INFO (CarpetX):   total cells updated:             1.98345e+09
INFO (CarpetX):   average iterations per second: 0.150818
INFO (CarpetX):   average cell updates per second: 5.98281e+07
